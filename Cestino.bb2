;-> CestinoGlobale by Stefano Maria Regattin
;i> 2 novembre 2006
;m> 3,27 novembre 2006
;m> 9,10,21,23,24,27,29,30,31 dicembre 2006
;m> 1,2,3,4,6,12,21 gennaio 2007
;m> 16,17,18,19,21,23,24 gennaio 2008
;m> 12 aprile 2008
;m> 22,23 novembre 2008
;m> 9,10,17,18,20,21 dicembre 2008
;m> 9 gennaio 2009
;m> 11 maggio 2009
;m> 27,28 novembre 2017
;m> 23,24,25 aprile-Giorno Della Liberazione 2018
;m> 29,30 aprile 2018
;m> 2,3 maggio 2018
;m> 4 dicembre 2018
;-------------------

;----------------------------------------------------------------------
;le seguenti linee servono per la corretta gestione della versione del
; programma
;the following lines are for the correct handling of the program's version
;--------------------------------------------------------------------------
JMP InizioDelProgramma

;-----------------------
;versione del programma
;program's version
;------------------
Dc.b "$VER: CestinoGlobale 1.4 (4.12.2018)"

Even

InizioDelProgramma


;----------------------------------------------------
;queste costanti definiscono il tipo di una finestra
;these constants define the kind of a window
;--------------------------------------------

;resize window gadget
#FinestraRidimensionabile=1

;draggable window
#FinestraMovibile=2

;window depth gadget
#BottoneProfonditaFinestra=4

;window close gadget
#BottoneChiusuraFinestra=8

;clip right drawing
#BloccaGraficaADestra=16; $10

;clip bottom drawing
#BloccaGraficaSotto=32; $20

;backdrop window
#FinestraDiSfondo=256; $100

;gadgets remind window
#FinestraConservaBottoni=1024; $400

;borderless window
#FinestraSenzaBordi=2048; $800

;activated window
#FinestraAttivata=4096; $1000


;window kind
#TipoFinestra=#FinestraMovibile+#BottoneChiusuraFinestra+#FinestraConservaBottoni+#FinestraAttivata


;----------------------------------------------------------
;queste costanti corrispondono agli eventi di una finestra
;these constants correspond at the events of a window
;-----------------------------------------------------

;you have pressed a mouse button
#HaiPremutoUnTastoDelTopo=8

;you have moved the mouse
#HaiMossoIlTopo=16; $10

;you have pressed a gadget
#HaiPremutoUnBottone=32; $20

;you have released a gadget
#HaiRilasciatoUnBottone=64; $40

;you have activated a menu
#HaiAttivatoUnMenu=256; $100

;you have closed the window
#HaiChiusoLaFinestra=512; 200

;you have pressed a key
#HaiPremutoUnTasto=1024; $400

;you have inserted a diskette
#HaiInseritoUnDischetto=32768; $8000

;you have removed a diskette
#HaiToltoUnDisco=65536; $10000

;you have activated the window
#HaiAttivatoLaFinestra=262144; $40000

;you have deactivated the window
#HaiDisattivatoLaFinestra=524288; $80000


;------------------------------------------------------------------------------
;queste costanti riportano il numero identificatore del bottone della finestra
;di gestione del cestino
;these constants reports the trashcan item handling button identifier number
;----------------------------------------------------------------------------

;eliminate button number
#BottoneElimina=0

;recycle button number
#BottoneRicicla=1

;All button number
#BottoneTutti=2

;None button number
#BottoneNessuno=3

;Invert button number
#BottoneInverti=4

;scroll bar
#BarraDiScorrimento=5


;----------------------
;costanti per il mouse
;mouse constants
;----------------

;value of first click of the left mouse button
#TastoSinistroDelTopoPremuto=1

;value of first click of the right mouse button
#TastoDestroDelTopoPremuto=2

;value of first click of both mouse buttons
#EntrambiITastiDelTopoPremuti=3


;---------------
;altre costanti
;other constants
;----------------

;topaz font size
#GrandezzaFonteTopaz=8

;horizontal slider
#BarraOrizzontale=64

;verical slider
#BarraVerticale=128

;button position from window right side
#BottoneADestra=2

;button position from window bottom side
#BottoneInBasso=4

;writing channel
#CanaleDiScrittura=0

;trashcan elements
#CestinaElementi=1

;global trashcan identifier number
#CestinoGlobale=0

;close trashcan
#ChiudiCestino=1

;trashcan event identifier number
#EventoCestino=$800000

;window identifier number
#Finestra=0

;handle items
#Gestisci=2

;icon event
#Icona=2

;sliders width
#LarghezzaBarre=8

;trashcan gadgetlist identifier number
#ListaBotCest=0

;handling gadgetlist identifier number
#ListaBotGest=1

;workbench screen
#SchermoWB=0

;vertical slider
#Verticale=128; $80

;devices
#Dispositivi=127

;elements
#Elementi=127

;device selection
#TipoDispositivo=1

;element selection
#TipoElemento=0

;double quote ascii value
#Virgolette=34


;------------------------------------------------------------
;le seguenti costanti sono usate dal comando GetDeviceList()
;the following constants are used by GetDeviceList() command
;------------------------------------------------------------

;selezione dei dispositivi
#Devices=%100

;selezione dei volumi
#Volumes=%1000

;selezione degli assegnamenti
#Assignments=%10000


;-------------------------------------------------------------------
;le seguenti costanti sono usate per impostare i colori dei bottoni
;the following constants are used to set the button colours
;-----------------------------------------------------------

;OCS low colour
#ColoreBasso=9

;OCS high colour
#ColoreAlto=10

;AGA low colour
#ColoreBassoAGA=143

;AGA high colour
#ColoreAltoAGA=159


;          open the window,invisble area, close the window,item to trash total,window opened, window activated
DEFTYPE .b ApriLaFinestra, AreaInvisibile,ChiudiLaFinestra,ElementiDaCestinare,FinestraAperta,FinestraAttivata

;          devices reading,   first element,mouse buttons pressed second click
DEFTYPE .b LetturaDispositivi,PrimoElemento,SecondoClicDeiTastiPremutiDelTopo

;          pale cyan colour,white colour,pale blue colour,Black colour,pale yellow colour,pale red colour, pale green colour
DEFTYPE .w ColoreAcquaTenue,ColoreBianco,ColoreBluTenue,ColoreNero,    ColoreGialloTenue, ColoreRossoTenue,ColoreVerdeTenue

;          pale purple colour,WB colours,elements number,button x,window width,WB width,trashcan x ,window x,button y,window wid
DEFTYPE .w ColoreViolaTenue,  ColoriWB,  NumeroElementi, XBottone,XLunFin,     XLunWB,  XPosCestino,XPosFin, YBottone,YLunFin

;          wb height,window y,trashcan y
DEFTYPE .w YLunWB,   YPosFin, YPosCestino


;closed window handling requester buttons
BottoniGestioneFinesChiusa$="Chiudi|Gestisci|Va bene"

;opened window handling requester buttons
BottoniGestioneFinesAperta$="Chiudi|Va bene"

;single requester button
BottonePannello$="Va bene"

;action requester buttons
BottoniPannello$="Cestina|Lascia"

;trashcan presence file path and name
CestinoAperto$="RAM:CestinoGlobaleAperto.tag"

;path of the icon to use
Icona$="SYS:Trashcan"

;appicon name
NomeIcona$="Cestino"

;requesters and windows title
TitoloCestino$="Cestino Globale 1.4"

;workbench title
TitoloWorkbench$=TitoloCestino$+" made in Italy by Stefano Maria Regattin on Tue 4th Nov 2018"

;console title
TitoloConsole$="CestinoGlobale1.4"

;AmigaDOS commands console
ConsoleComandi$=" >CON:0/11//45/"+TitoloConsole$+"/AUTO"

;double quote character
Virgolette$=Chr$(#Virgolette)


NEWTYPE .Elemento

;item name
 Nome$

;this will be set to True if the item has been selected
 Selezionato.b

End NEWTYPE

;elements (files and drawers)
Dim Elemento.Elemento(#Elementi-1)

;device names
Dim Dispositivo$(#Dispositivi-1)

;device selection
Dim SelezioneDispositivo.b(#Dispositivi-1)

;finds the colour nearest to the specified colour
Function.w TrovaIlColore{Rosso.w,Verde.w,Blu.w,Modo.b}
SHARED ColoriWB
 ColoreTrovato.w=256:DistanzaRosso.w=256:DistanzaVerde.w=256:DistanzaBlu.w=256
 For Colore.w=0 To ColoriWB-1
  If CheckAGA=True
   NuovaDistanzaRosso.w=AGARed(Colore)
   NuovaDistanzaVerde.w=AGAGreen(Colore)
   NuovaDistanzaBlu.w=AGABlue(Colore)
  Else
   NuovaDistanzaRosso=Red(Colore)
   NuovaDistanzaVerde=Green(Colore)
   NuovaDistanzaBlu=Blue(Colore)
  EndIf
  NuovaDistanzaRosso=Rosso-NuovaDistanzaRosso
  NuovaDistanzaVerde=Verde-NuovaDistanzaVerde
  NuovaDistanzaBlu=Blu-NuovaDistanzaBlu
  If Modo=0
   If Abs(NuovaDistanzaRosso)<=DistanzaRosso AND Abs(NuovaDistanzaVerde)<=DistanzaVerde AND Abs(NuovaDistanzaBlu)<=DistanzaBlu
    ColoreTrovato=Colore
    DistanzaRosso=Abs(NuovaDistanzaRosso)
    DistanzaVerde=Abs(NuovaDistanzaVerde)
    DistanzaBlu=Abs(NuovaDistanzaBlu)
   EndIf
  EndIf
  If Modo=1
   If Abs(NuovaDistanzaRosso)<32 AND Abs(NuovaDistanzaVerde)<32 AND Abs(NuovaDistanzaBlu)<32 Then ColoreTrovato=Colore
  EndIf
  If Modo=2
   If Abs(NuovaDistanzaRosso)<=DistanzaRosso
    If Abs(NuovaDistanzaRosso)<Abs(NuovaDistanzaVerde) AND Abs(NuovaDistanzaRosso)<Abs(NuovaDistanzaBlu)
     ColoreTrovato=Colore
     DistanzaRosso=Abs(NuovaDistanzaRosso)
     DistanzaVerde=Abs(NuovaDistanzaVerde)
     DistanzaBlu=Abs(NuovaDistanzaBlu)
    EndIf
   EndIf
   If Abs(NuovaDistanzaVerde)<=DistanzaVerde
    If Abs(NuovaDistanzaVerde)<Abs(NuovaDistanzaBlu) AND Abs(NuovaDistanzaVerde)<Abs(NuovaDistanzaRosso)
     ColoreTrovato=Colore
     DistanzaRosso=Abs(NuovaDistanzaRosso)
     DistanzaVerde=Abs(NuovaDistanzaVerde)
     DistanzaBlu=Abs(NuovaDistanzaBlu)
    EndIf
   EndIf
   If Abs(NuovaDistanzaBlu)<=DistanzaBlu
    If Abs(NuovaDistanzaBlu)<Abs(NuovaDistanzaRosso) AND Abs(NuovaDistanzaBlu)<Abs(NuovaDistanzaVerde)
     ColoreTrovato=Colore
     DistanzaRosso=Abs(NuovaDistanzaRosso)
     DistanzaVerde=Abs(NuovaDistanzaVerde)
     DistanzaBlu=Abs(NuovaDistanzaBlu)
    EndIf
   EndIf
  EndIf
 Next Colore
 If ColoreTrovato=256 AND Abs(NuovaDistanzaRosso)<32 AND Abs(NuovaDistanzaVerde)<32 AND Abs(NuovaDistanzaBlu)<32
  ColoreTrovato=Colore
 EndIf
Function Return ColoreTrovato
End Function

;---------------------------------------------------------------------
;questa procedura trova i colori richiesti tra i colori del Workbench
;this procedure finds the required colours from the Workbench colours
;---------------------------------------------------------------------
Statement TrovaIColori{}
SHARED ColoreAcquaTenue
SHARED ColoreBianco
SHARED ColoreBluTenue
SHARED ColoreNero
SHARED ColoreGialloTenue
SHARED ColoreRossoTenue
SHARED ColoreVerdeTenue
SHARED ColoreViolaTenue
 If CheckAGA=True
  ColoreBasso=#ColoreBassoAGA:ColoreAlto.w=#ColoreAltoAGA:ColoreBianco.w=255
 Else
  ColoreAlto=#ColoreBasso:ColoreAlto=#ColoreAlto:ColoreBianco=15
 EndIf
 ColoreNero=TrovaIlColore{0,0,0,0}
 ColoreRossoTenue=TrovaIlColore{ColoreAlto,ColoreBasso,ColoreBasso,0}
 ColoreGialloTenue=TrovaIlColore{ColoreAlto,ColoreAlto,ColoreBasso,0}
 ColoreVerdeTenue=TrovaIlColore{ColoreBasso,ColoreAlto,ColoreBasso,0}
 ColoreAcquaTenue=TrovaIlColore{ColoreBasso,ColoreBasso,ColoreBasso,0}
 ColoreBluTenue=TrovaIlColore{ColoreBasso,ColoreBasso,ColoreAlto,0}
 ColoreViolaTenue=TrovaIlColore{ColoreAlto,ColoreBasso,ColoreAlto,0}
 ColoreBianco=TrovaIlColore{ColoreBianco,ColoreBianco,ColoreBianco,0}
End Statement

;item buttons selection handler
Statement SelezioneElementi{ElementiODispositivi.b,TipoDiSelezione.b}
SHARED Dispositivo$()
SHARED Elemento()
SHARED ElementiDaCestinare
SHARED NumeroElementi
SHARED SelezioneDispositivo()
 Select ElementiODispositivi
 Case #TipoElemento
  For Elemento.b=0 To NumeroElementi-1
   If Elemento(Elemento)\Nome<>""
    Select TipoDiSelezione
    Case #BottoneTutti
     If Elemento(Elemento)\Selezionato=False
      Elemento(Elemento)\Selezionato=True
      ElementiDaCestinare+1
     EndIf
    Case #BottoneNessuno
     If Elemento(Elemento)\Selezionato=True
      Elemento(Elemento)\Selezionato=False
      ElementiDaCestinare-1
     EndIf
    Case #BottoneInverti
     If Elemento(Elemento)\Selezionato=False
      Elemento(Elemento)\Selezionato=True
      ElementiDaCestinare+1
     Else
      Elemento(Elemento)\Selezionato=False
      ElementiDaCestinare-1
     EndIf
    End Select
   EndIf
  Next Elemento
 Case #TipoDispositivo
  For Dispositivo.b=0 To NumeroElementi-1
   If Dispositivo$(Dispositivo)<>""
    Select TipoDiSelezione
    Case #BottoneTutti
     If SelezioneDispositivo(Dispositivo)=False Then SelezioneDispositivo(Dispositivo)=True
    Case #BottoneNessuno
     If SelezioneDispositivo(Dispositivo)=True Then SelezioneDispositivo(Dispositivo)=False
    Case #BottoneInverti
     If SelezioneDispositivo(Dispositivo)=False
      SelezioneDispositivo(Dispositivo)=True
     Else
      SelezioneDispositivo(Dispositivo)=False
     EndIf
    End Select
   EndIf
  Next Dispositivo
 End Select
End Statement

;items to go into trashcans handler
Statement CestinamentoElementi{}
SHARED Anno$
SHARED BottonePannello$
SHARED BottoniPannello$
SHARED ConsoleComandi$
SHARED ElementiDaCestinare
SHARED Elemento()
SHARED Giorno$
SHARED Mese$
SHARED NumeroElementi
SHARED TitoloCestino$
SHARED Virgolette$
 If ElementiDaCestinare=0 Then Statement Return Else FineCestinamentoElementi.b=False
 Repeat
  Elemento.b=0:ElementoDaCestinare.b=0
  Repeat
   If ElementoDaCestinare=0 Then MessaggioPannello$="Elementi da cestinare:|"
   If Elemento(Elemento)\Selezionato=True
    MessaggioPannello$+Elemento(Elemento)\Nome
    If ElementoDaCestinare<9 AND ElementoDaCestinare<ElementiDaCestinare-1 Then MessaggioPannello$+"|"
    ElementoDaCestinare+1
   EndIf
   Elemento+1
  Until ElementoDaCestinare=10 OR ElementoDaCestinare=ElementiDaCestinare OR Elemento=#Elementi-1
  If ElementoDaCestinare>0
   Richiesta.b=Request(TitoloCestino$,MessaggioPannello$,BottoniPannello$)
  Else
   FineCestinamentoElementi=True
  EndIf
  If Richiesta=#CestinaElementi
   Elemento=0:ElementoDaCestinare=0
   Repeat
    If Elemento(Elemento)\Selezionato=True
     ElementoDaCestinare$=Elemento(Elemento)\Nome
    Else
     ElementoDaCestinare$=""
    EndIf
    If ElementoDaCestinare$<>""
     PercorsoElementoDaCestinare$=GetPathName(ElementoDaCestinare$)
     NomeElementoDaCestinare$=GetFileName(ElementoDaCestinare$)
     DispositivoPrincipaleLocale$=Left$(PercorsoElementoDaCestinare$,Instr(PercorsoElementoDaCestinare$,":"))
     DispositivoPrincipaleLocale$=Virgolette$+DispositivoPrincipaleLocale$+Virgolette$
     ElementoDaCestinare$=DispositivoPrincipaleLocale$+PercorsoElementoDaCestinare$+NomeElementoDaCestinare$
     CestinoLocale$=DispositivoPrincipaleLocale$+"Trashcan/"
     If Exists(CestinoLocale$)
      If NomeElementoDaCestinare$<>""
       MessaggioPannello$="Vuoi cestinare:|"+DispositivoPrincipaleLocale$+">"+NomeElementoDaCestinare$
       Richiesta=Request(TitoloCestino$,MessaggioPannello$,BottoniPannello$)
       If Richiesta=#CestinaElementi
        Execute_ "C:Copy CLONE"+ConsoleComandi$,ElementoDaCestinare$,CestinoLocale$
        Execute_ "C:Delete"+ConsoleComandi$,ElementoDaCestinare$,""
        If Exists(ElementoDaCestinare$+".info")>0
         Execute_ "C:Copy CLONE"+ConsoleComandi$,ElementoDaCestinare$+".info",CestinoLocale$
         Execute_ "C:Delete"+ConsoleComandi$,ElementoDaCestinare$+".info",""
        EndIf
        ElementoDaCestinare+1
       EndIf
      Else
       Carattere.w=1
       Repeat
        UltimoCassetto.w=Carattere-1
        Barra.w=Instr(PercorsoElementoDaCestinare$,"/",Carattere)
        Carattere=Barra+1
       Until Carattere=Len(PercorsoElementoDaCestinare$)+1
       CassettoDaCestinare$=UnRight$(PercorsoElementoDaCestinare$,UltimoCassetto)
       MessaggioPannello$="Vuoi cestinare:|"+DispositivoPrincipaleLocale$+">"+CassettoDaCestinare$
       Richiesta=Request(TitoloCestino$,MessaggioPannello$,BottoniPannello$)
       If Richiesta=#CestinaElementi
        PercorsoElementoDaCestinare$=UnLeft$(PercorsoElementoDaCestinare$,1)
        Execute_ "C:Copy CLONE ALL"+ConsoleComandi$,PercorsoElementoDaCestinare$,CestinoLocale$
        Execute_ "C:Delete ALL"+ConsoleComandi$,PercorsoElementoDaCestinare$,""
        If Exists(PercorsoElementoDaCestinare$+".info")>0
         Execute_ "C:Copy CLONE"+ConsoleComandi$,PercorsoElementoDaCestinare$+".info",CestinoLocale$
         Execute_ "C:Delete"+ConsoleComandi$,PercorsoElementoDaCestinare$+".info",""
        EndIf
        ElementoDaCestinare+1
       EndIf
      EndIf
     Else
      MessaggioPannello$="Il dispositivo|"
      MessaggioPannello$+DispositivoPrincipaleLocale$+"|"
      MessaggioPannello$+"non ha il cestino!"
      Request TitoloCestino$,MessaggioPannello$,BottonePannello$
     EndIf
     Elemento(Elemento)\Selezionato=False
     Elemento(Elemento)\Nome=""
    EndIf
    Elemento+1
   Until ElementoDaCestinare=10 OR ElementoDaCestinare=ElementiDaCestinare OR Elemento=#Elementi-1
   If ElementoDaCestinare>0
    MessaggioElementoCancellato$+UStr$(ElementoDaCestinare)
    If ElementoDaCestinare=1
     MessaggioElementoCancellato$+" elemento cestinato!"
    Else
     MessaggioElementoCancellato$+" elementi cestinati!"
    EndIf
    Request TitoloCestino$,MessaggioElementoCancellato$,BottonePannello$
    ElementiDaCestinare-ElementoDaCestinare:NumeroElementi-ElementoDaCestinare
    Elemento=0:ElementoDaCestinare=0:PosizioneElemento.b=0
    Repeat
     If Elemento(Elemento)\Nome=""
      For ElementoDaCestinare=Elemento To #Elementi-2
       Elemento(ElementoDaCestinare)\Selezionato=Elemento(ElementoDaCestinare+1)\Selezionato
       Elemento(ElementoDaCestinare)\Nome=Elemento(ElementoDaCestinare+1)\Nome
      Next ElementoDaCestinare
     Else
      Elemento+1
     EndIf
     PosizioneElemento+1
    Until PosizioneElemento=#Elementi-1
    ElementoDaCestinare=0:FineCestinamentoElementi=True
   EndIf
  Else
   Elemento=0:ElementoDaLasciare.b=0
   Repeat
    If Elemento(Elemento)\Selezionato=True
     Elemento(Elemento)\Selezionato=False
     ElementoDaLasciare+1
    EndIf
    Elemento+1
   Until ElementoDaLasciare=10 OR ElementoDaLasciare=ElementiDaCestinare OR Elemento=#Elementi-1
   ElementiDaCestinare-ElementoDaLasciare:FineCestinamentoElementi=True
  EndIf
 Until FineCestinamentoElementi=True
End Statement

;empty trashcans
Statement SvuotamentoCestini{}
SHARED Anno$
SHARED BottonePannello$
SHARED BottoniPannello$
SHARED ConsoleComandi$
SHARED Dispositivo$()
SHARED SelezioneDispositivo()
SHARED TitoloCestino$
SHARED Virgolette$
 For Dispositivo.b=0 To #Dispositivi
  If Dispositivo$(Dispositivo)<>"" AND SelezioneDispositivo(Dispositivo)=True
   DispositivoPrincipaleLocale$=Virgolette$+Dispositivo$(Dispositivo)+Virgolette$
   CestinoLocale$=DispositivoPrincipaleLocale$+"Trashcan/"
   Execute_ "C:Delete ALL QUIET"+ConsoleComandi$,CestinoLocale$+"#?",""
   MessaggioPannello$="Cestino di "+DispositivoPrincipaleLocale$+" svuotato!"
   Request TitoloCestino$,MessaggioPannello$,BottoneCestino$
   SelezioneDispositivo(Dispositivo)=False
  EndIf
 Next Dispositivo
End Statement

;update scrollbar
Statement AggiornaBarraDiScorrimento{ListaBottoni.b}
SHARED AreaInvisibile
SHARED NumeroElementi
SHARED PrimoElemento
 AreaInvisibile=Max(NumeroElementi-9,10)
 SetVProp ListaBottoni,#BarraDiScorrimento,1/(AreaInvisibile-PrimoElemento),1/AreaInvisibile
 Redraw #Finestra,#BarraDiScorrimento
End Statement

;clear window
Statement PulisciFinestra{}
SHARED AltezzaBottoni
 WBox 0,0,InnerWidth-#LarghezzaBarre-1,InnerHeight-1-AltezzaBottoni,0:WLocate 0,0
End Statement

;************************************************
;* fine delle procedure ed inizio del programma *
;******* procedures end and program start *******
;************************************************

WBStartup

If Exists(CestinoAperto$)>0
 MessaggioPannello$="Non posso aprire|"
 MessaggioPannello$+"un'altro cestino!"
 Request TitoloCestino$,MessaggioPannello$,BottonePannello$
 End
EndIf

OpenFontPrefs

;window font height
 AltezzaFonteFinestre.b=DefaultFontHeight(0)

CloseFontPrefs

;if the font prefs does not exists goes back to the rom font
If AltezzaFonteFinestre=0 Then AltezzaFonteFinestre=#GrandezzaFonteTopaz

;window title bars height definition
AltezzaTitoliFinestre=AltezzaFonteFinestre+3

;buttons height definition
AltezzaBottoni=2+#GrandezzaFonteTopaz+2

WbToScreen #SchermoWB
IndirizzoSchermoWB.l=Peek.l(Addr Screen(#SchermoWB))
XLunWB=Peek(IndirizzoSchermoWB+12)
YLunWB=Peek(IndirizzoSchermoWB+14)

XPosCestino=XLunWB-70
YPosCestino=YLunWB-100

XLunFin=4+#GrandezzaFonteTopaz*30+#LarghezzaBarre+4
YLunFin=AltezzaTitoliFinestre+AltezzaFonteFinestre*10+AltezzaBottoni+2
XPosFin=(XLunWB-XLunFin)/2
YPosFin=(YLunWB-YLunFin)/2
TipoFinestra=#BottoneChiusuraFinestra+#FinestraConservaBottoni+#FinestraAttivata

ColoriWB=2^WBDepth:TrovaIColori{}:BorderPens ColoreBianco,ColoreNero

XBottone$="Cesti":YBottone=-(AltezzaBottoni-1)
GadgetPens ColoreNero,ColoreViolaTenue:TextGadget #ListaBotCest,0,YBottone,#BottoneInBasso,#BottoneElimina,XBottone$
XBottone=4+Len(XBottone$)*8+4:XBottone$="Annul"
GadgetPens ColoreNero,ColoreVerdeTenue:TextGadget #ListaBotCest,XBottone,YBottone,#BottoneInBasso,#BottoneRicicla,XBottone$
XBottone+4+Len(XBottone$)*8+4:XBottone$="Tutti"
GadgetPens ColoreNero,0:TextGadget #ListaBotCest,XBottone,YBottone,#BottoneInBasso,#BottoneTutti,XBottone$
XBottone+4+Len(XBottone$)*8+4:XBottone$="Nessu"
GadgetPens ColoreNero,ColoreGialloTenue:TextGadget #ListaBotCest,XBottone,YBottone,#BottoneInBasso,#BottoneNessuno,XBottone$
XBottone+4+Len(XBottone$)*8+4:XBottone$="Inver"
GadgetPens ColoreNero,ColoreAcquaTenue:TextGadget #ListaBotCest,XBottone,YBottone,#BottoneInBasso,#BottoneInverti,XBottone$
PropGadget #ListaBotCest,-7,0,#BottoneADestra+#Verticale,#BarraDiScorrimento,#LarghezzaBarre,YLunFin-2-AltezzaTitoliFinestre

XBottone$="Elimi":YBottone=-(AltezzaBottoni-1)
GadgetPens ColoreNero,ColoreViolaTenue:TextGadget #ListaBotGest,0,YBottone,#BottoneInBasso,#BottoneElimina,XBottone$
XBottone=4+Len(XBottone$)*8+4:XBottone$="Ricic"
GadgetPens ColoreNero,ColoreVerdeTenue:TextGadget #ListaBotGest,XBottone,YBottone,#BottoneInBasso,#BottoneRicicla,XBottone$
XBottone+4+Len(XBottone$)*8+4:XBottone$="Tutti"
GadgetPens ColoreNero,0:TextGadget #ListaBotGest,XBottone,YBottone,#BottoneInBasso,#BottoneTutti,XBottone$
XBottone+4+Len(XBottone$)*8+4:XBottone$="Nessu"
GadgetPens ColoreNero,ColoreGialloTenue:TextGadget #ListaBotGest,XBottone,YBottone,#BottoneInBasso,#BottoneNessuno,XBottone$
XBottone+4+Len(XBottone$)*8+4:XBottone$="Inver"
GadgetPens ColoreNero,ColoreAcquaTenue:TextGadget #ListaBotGest,XBottone,YBottone,#BottoneInBasso,#BottoneInverti,XBottone$
PropGadget #ListaBotGest,-7,0,#BottoneADestra+#Verticale,#BarraDiScorrimento,#LarghezzaBarre,YLunFin-2-AltezzaTitoliFinestre

DataDiOggi$=Date$(SystemDate)
Giorno$=Left$(DataDiOggi$,2)
Mese$=Mid$(DataDiOggi$,4,2)
Anno$=Right$(DataDiOggi$,4)

If AddAppIcon(#CestinoGlobale,NomeIcona$,Icona$,XPosCestino,YPosCestino)=True
 CestinoGlobale.b=WriteFile(#CanaleDiScrittura,CestinoAperto$)
 If CestinoGlobale=True
  FileOutput #CanaleDiScrittura
  NPrint "$VER: CestinoGlobale 1.4 (4.12.2018)"
  NPrint "Made in Italy by Stefano Maria Regattin"
  Print DataDiOggi$
  CloseFile #CanaleDiScrittura
  PopOutput
 Else
  MessaggioPannello$="Non sono riuscito a scrivere |"
  MessaggioPannello$+"il testo di presenza del     |"
  MessaggioPannello$+"cestino nel disco in memoria.|"
  MessaggioPannello$+"Non lanciare un'altro cestino!"
  Request TitoloCestino$,MessaggioPannello$,BottonePannello$
 EndIf

 ChiudiCestino.b=False
 Repeat
  If Exists(CestinoAperto$)=0 Then ChiudiCestino=True
  Decina.b=0
  EventoCestino.l=AppEvent
  If AppEventType=#Icona
   NumeroElementi=AppNumFiles
   If NumeroElementi>0
    If NumeroElementi>#Elementi
     MessaggioPannello$="Non posso gestire piu' di 128 |"
     MessaggioPannello$+"elementi per volta, mi spiace!|"
     MessaggioPannello$+"I primi 128 elementi verranno |"
     MessaggioPannello$+"conteggiati, non quelli oltre."
     Request TitoloCestino$,MessaggioPannello$,BottonePannello$
     NumeroElementi=Min(NumeroElementi,#Elementi)
    EndIf
    For Elemento.b=0 To #Elementi-1
     If Elemento<NumeroElementi
      Elemento$=AppFile(Elemento+1)
      If LCase$(Right$(Elemento$,Len("Trashcan/")))<>"trashcan/"
       Elemento(Elemento-Decina)\Nome=Elemento$
      Else

;------------------------------------------------------------------
;la seguente variabile viene usata per contare i cestini, solo qui
;the following variables has used to count the trashcan folders, only here
;--------------------------------------------------------------------------
       Decina+1

      EndIf
     Else
      Elemento(Elemento)\Nome=""
     EndIf
    Next Elemento
    NumeroElementi-Decina
    Window #Finestra,XPosFin,YPosFin,XLunFin,YLunFin,#TipoFinestra,TitoloCestino$,ColoreBianco,ColoreNero,#ListaBotCest
    WTitle TitoloCestino$,TitoloWorkbench$
    LarghezzaFonteFinestre=TextLength_(RastPort(#Finestra)," ",Len(" "))
    If InnerWidth<LarghezzaFonteFinestre*30+#LarghezzaBarre OR InnerHeight<AltezzaFonteFinestre*10+AltezzaBottoni
     XLunFin+XLunFin-4-InnerWidth-4
     YLunFin+YLunFin-AltezzaTitoliFinestre-InnerHeight-2
     CloseWindow #Finestra
     Window #Finestra,XPosFin,YPosFin,XLunFin,YLunFin,#TipoFinestra,TitoloCestino$,ColoreBianco,ColoreNero,#ListaBotCest
     WTitle TitoloCestino$,TitoloWorkbench$
    EndIf
    Menus Off
    Elemento=0:PrimoElemento=0
    AggiornaBarraDiScorrimento{#ListaBotCest}
    ChiudiLaFinestra=False
    Repeat
     If SecondoClicDeiTastiPremutiDelTopo=False
      PulisciFinestra{}
      For Decina=0 To 9
       If Elemento(PrimoElemento+Decina)\Selezionato=True Then WColour ColoreBianco,3 Else WColour ColoreNero,0
       Elemento$=Elemento(PrimoElemento+Decina)\Nome
       NomeElemento$=GetFileName(Elemento$)
       If NomeElemento$="" Then NomeElemento$=Right$(GetPathName(Elemento$),30)
       NPrint NomeElemento$,SPACE$(30-Len(NomeElemento$))
      Next Decina
     Else
      SecondoClicDeiTastiPremutiDelTopo=False
     EndIf
     EventoFinestra.l=WaitEvent
     Select EventoFinestra
     Case #HaiPremutoUnTastoDelTopo
      YPosTopo.b=WMouseY/AltezzaFonteFinestre
      If YPosTopo>=0 AND YPosTopo<10
       Elemento=PrimoElemento+YPosTopo
       If Elemento(Elemento)\Nome<>""
        TastiDelTopo.b=MButtons
        If TastiDelTopo=#TastoSinistroDelTopoPremuto
         Elemento(Elemento)\Selezionato=NOT Elemento(Elemento)\Selezionato
         If Elemento(Elemento)\Selezionato=True
          If ElementiDaCestinare<#Dispositivi
           ElementiDaCestinare+1
           AggiornaBarraDiScorrimento{#ListaBotCest}
          Else
           MessaggioPannello$="Non puoi aggiungere|"
           MessaggioPannello$+"altri elementi!"
           Request TitoloCestino$,MessaggioPannello$,BottonePannello$
          EndIf
         Else
          ElementiDaCestinare-1
          AggiornaBarraDiScorrimento{#ListaBotCest}
         EndIf
        EndIf
       EndIf
      EndIf
      If TastiDelTopo>#EntrambiITastiDelTopoPremuti Then SecondoClicDeiTastiPremutiDelTopo=True
     Case #HaiPremutoUnBottone
      BottonePremuto.b=GadgetHit
      Select BottonePremuto
      Case #BottoneElimina
       CestinamentoElementi{}
       AggiornaBarraDiScorrimento{#ListaBotCest}
      Case #BottoneRicicla
       ChiudiLaFinestra=True
      Case #BottoneTutti
       SelezioneElementi{#TipoElemento,#BottoneTutti}
      Case #BottoneNessuno
       SelezioneElementi{#TipoElemento,#BottoneNessuno}
      Case #BottoneInverti
       SelezioneElementi{#TipoElemento,#BottoneInverti}
      Case #BarraDiScorrimento
       PrimoElemento=VPropPot(#ListaBotCest,#BarraDiScorrimento)*AreaInvisibile
      Default
       SecondoClicDeiTastiPremutiDelTopo=True
      End Select
     Case #HaiRilasciatoUnBottone
      BottonePremuto=GadgetHit
      If BottonePremuto=#BarraDiScorrimento
       PrimoElemento=VPropPot(#ListaBotCest,#BarraDiScorrimento)*AreaInvisibile
      Else
       SecondoClicDeiTastiPremutiDelTopo=True
      EndIf
     Case #HaiChiusoLaFinestra
      ChiudiLaFinestra=True
     Case #HaiDisattivatoLaFinestra
      SecondoClicDeiTastiPremutiDelTopo=True
     Default
      SecondoClicDeiTastiPremutiDelTopo=True
     End Select
     FlushEvents
    Until ChiudiLaFinestra=True
    CloseWindow #Finestra
    For Elemento=0 To #Elementi-1
     Elemento(Elemento)\Nome="",False
    Next Elemento
    ElementiDaCestinare=0
    NumeroElementi=0
   Else
    MessaggioPannello$="          Cestino Globale 1.4          |"
    MessaggioPannello$+"Made in Italy by Stefano Maria Regattin|"
    MessaggioPannello$+"      on Tuesday 4th December 2018     |"
    MessaggioPannello$+"    www.stefanomaria.altervista.org    |"
    MessaggioPannello$+"    www.esseemmeerre.altervista.org    |"
    MessaggioPannello$+"       esseemmeerre@fastwebnet.it      |"
    MessaggioPannello$+"            ICQ#: 113412377            |"
    MessaggioPannello$+"In memory of my DOpus ARexx WB Trashcan"
    If FinestraAperta=True
     BottoniGestione$=BottoniGestioneFinesAperta$
    Else
     BottoniGestione$=BottoniGestioneFinesChiusa$
    EndIf
    Richiesta=Request(TitoloCestino$,MessaggioPannello$,BottoniGestione$)
    If Richiesta=#ChiudiCestino Then ChiudiCestino=True
    If Richiesta=#Gestisci AND FinestraAperta=False Then ApriLaFinestra=True
    If FinestraAperta=True Then Activate #Finestra:FinestraAttivata=True
   EndIf
  Else
   If ApriLaFinestra=True
    Window #Finestra,XPosFin,YPosFin,XLunFin,YLunFin,#TipoFinestra,TitoloCestino$,ColoreBianco,ColoreNero,#ListaBotGest
    WTitle TitoloCestino$,TitoloWorkbench$
    LarghezzaFonteFinestre=TextLength_(RastPort(#Finestra)," ",Len(" "))
    If InnerWidth<LarghezzaFonteFinestre*30+#LarghezzaBarre OR InnerHeight<AltezzaFonteFinestre*10+AltezzaBottoni
     XLunFin+XLunFin-4-InnerWidth-4
     YLunFin+YLunFin-AltezzaTitoliFinestre-InnerHeight-2
     CloseWindow #Finestra
     Window #Finestra,XPosFin,YPosFin,XLunFin,YLunFin,#TipoFinestra,TitoloCestino$,ColoreBianco,ColoreNero,#ListaBotGest
     WTitle TitoloCestino$,TitoloWorkbench$
    EndIf
    Menus Off
    ApriLaFinestra=False
    ChiudiLaFinestra=False
    FinestraAperta=True
    FinestraAttivata=True
   EndIf
   If FinestraAperta=True
    If LetturaDispositivi=False
     LetturaDispositivi=GetDeviceList(#Volumes+1)
     If LetturaDispositivi=True
      For Dispositivo.b=0 To #Dispositivi-1
       Dispositivo$(Dispositivo)=""
       Dispositivo$=NextDevice
       If Dispositivo$<>"" Then Dispositivo$(Dispositivo)=Dispositivo$+":"
      Next Dispositivo
      FreeDeviceList
      NumeroElementi=0
      For Dispositivo=0 To #Dispositivi-1
       If Exists(Dispositivo$(Dispositivo)+"Trashcan/") Then NumeroElementi+1 Else Dispositivo$(Dispositivo)=""
      Next Dispositivo
      SortUp:Sort Dispositivo$()
      Dispositivo=0:DispositivoVuoto.b=0
      Repeat
       If Dispositivo$(DispositivoVuoto)=""
        Repeat
         If Dispositivo<#Dispositivi-1 Then Dispositivo+1
        Until Dispositivo$(Dispositivo)<>""
        Dispositivo$(DispositivoVuoto)=Dispositivo$(Dispositivo)
        NumeroElementi+1
       EndIf
       DispositivoVuoto+1
      Until DispositivoVuoto=#Dispositivi
     EndIf
    EndIf
    Elemento=0:PrimoElemento=0
    AggiornaBarraDiScorrimento{#ListaBotGest}
    Repeat
     If FinestraAttivata=True
      If SecondoClicDeiTastiPremutiDelTopo=False
       PulisciFinestra{}
       For Decina=0 To 9
        If SelezioneDispositivo(PrimoElemento+Decina)=True Then WColour ColoreBianco,3 Else WColour ColoreNero,0
        Dispositivo$=Dispositivo$(PrimoElemento+Decina)
        NPrint Dispositivo$,SPACE$(30-Len(Dispositivo$))
       Next Decina
      Else
       SecondoClicDeiTastiPremutiDelTopo=False
      EndIf
      EventoFinestra=WaitEvent
      Select EventoFinestra
      Case #HaiPremutoUnTastoDelTopo
       YPosTopo=WMouseY/AltezzaFonteFinestre
       If YPosTopo>=0 AND YPosTopo<10
        TastiDelTopo=MButtons
        If TastiDelTopo=#TastoSinistroDelTopoPremuto
         SelezioneDispositivo(PrimoElemento+YPosTopo)=NOT SelezioneDispositivo(PrimoElemento+YPosTopo)
         SecondoClicDeiTastiPremutiDelTopo=False
        Else
         SecondoClicDeiTastiPremutiDelTopo=True
        EndIf
       EndIf
      Case #HaiPremutoUnBottone
       BottonePremuto=GadgetHit
       Select BottonePremuto
       Case #BottoneElimina
        SvuotamentoCestini{}
       Case #BottoneRicicla
        ChiudiLaFinestra=True
       Case #BottoneTutti
        SelezioneElementi{#TipoDispositivo,#BottoneTutti}
       Case #BottoneNessuno
        SelezioneElementi{#TipoDispositivo,#BottoneNessuno}
       Case #BottoneInverti
        SelezioneElementi{#TipoDispositivo,#BottoneInverti}
       Case #BarraDiScorrimento
        PrimoElemento=VPropPot(#ListaBotGest,#BarraDiScorrimento)*AreaInvisibile
       Default
        SecondoClicDeiTastiPremutiDelTopo=True
       End Select
      Case #HaiRilasciatoUnBottone
       BottonePremuto=GadgetHit
       If BottonePremuto=#BarraDiScorrimento
        PrimoElemento=VPropPot(#ListaBotGest,#BarraDiScorrimento)*AreaInvisibile
        SecondoClicDeiTastiPremutiDelTopo=False
       Else
        SecondoClicDeiTastiPremutiDelTopo=True
       EndIf
      Case #HaiChiusoLaFinestra
       ChiudiLaFinestra=True
      Case #HaiDisattivatoLaFinestra
       SecondoClicDeiTastiPremutiDelTopo=True
      Default
       SecondoClicDeiTastiPremutiDelTopo=True
      End Select
     Else
      EventoFinestra=WaitEvent
      If EventoFinestra=#HaiAttivatoLaFinestra Then FinestraAttivata=True
     EndIf
     FlushEvents
    Until ChiudiLaFinestra=True
    CloseWindow #Finestra
    ApriLaFinestra=False
    ChiudiLaFinestra=False
    FinestraAperta=False
    LetturaDispositivi=False
   EndIf
  EndIf
 Until ChiudiCestino=True
 MessaggioPannello$="Grazie per aver usato|il cestino globale!"
 Request TitoloCestino$,MessaggioPannello$,BottonePannello$
 DelAppIcon #CestinoGlobale
 KillFile CestinoAperto$
Else
 MessaggioPannello$="Non sono riuscito ad|aprire il cestino globale!"
 Request TitoloCestino$,MessaggioPannello$,BottonePannello$
EndIf
End
