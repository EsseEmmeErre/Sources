;-> BattleFields by Stefano Maria Regattin
;i> 25 aprile 2004
;m> 26,27,28 aprile 2004
;m> 2 maggio 2004
;m> 11 agosto 2004
;m> 18,20 marzo 2012
;--------------------

;----------------------------------------------------------------------
;le seguenti linee servono per la corretta gestione della versione del
; programma
;the following lines are for the correct handling of the program's version
;--------------------------------------------------------------------------
JMP InizioDelProgramma

;-----------------------
;versione del programma
;program version
;----------------
Dc.b "$VER: BattleFields 0.04 (20.3.2012)"

Even

;program start
InizioDelProgramma

;------------------------------------------------------------------------------
;le seguenti costanti servono per ricavare il periodo di un canale audio AMIGA
; dalla frequenza di campionamento; ce ne e' una per gli AMIGA PAL e una per
; quelli NTSC
;the following constants are used to obtain an AMIGA audio channel period from the
; sampling frequency; there is one for PAL AMIGAs and one for NTSC AMIGAs
;-------------------------------------------------------------------------

;PAL timing
#TemporizzazionePAL=3546895

;NTSC timing
#TemporizzazioneNTSC=3579545

;-------------------------------------------------------------------------
;questa variabile imposta il periodo minimo per i canali audio; il limite
; per i vecchi AMIGA e' 123, ma io ho scelto un periodo minimo di 125, che
; corrisponde ad un La nella nona ottava
;this variable sets the audio channels minimum period; on the oldest AMIGA the
; lowerst usable period is 123, but I have choosen minimum period of 125, that is
; the A note in the ninth octave
;--------------------------------
#PeriodoMinimo=125

;--------------------------------------------------
;le seguenti costanti indicano il tipo di finestra
;the following constants state the window's kind
;------------------------------------------------

;window sizing gadget
#BottoneRidimensionaFinestra=1

;draggable window
#FinestraMovibile=2

;window depth gadget
#BottoneNascondiFinestra=4

;window close gadget
#BottoneChiudiFinestra=8

;sizing window right border (you must set gimme-zero-zero to use it)
#BordoDestraFinestraRidimensionabile=16

;sizing window bottom border (you must set gimme-zero-zero to use it)
#BordoBassoFinestraRidimensionabile=32

;backdrop window
#FinestraDiSfondo=256

;gimme-zero-zero window
#FinestraConMemoriaBottoni=1024

;borderless window
#FinestraSenzaBottoni=2048

;window active
#FinestraAttivata=4096

;-------------------------------------------------
;le seguenti costanti indicano il tipo di bottoni
;the following constants state the gadgets' kind
;------------------------------------------------

;invert
#InvertiBottone=1

;related to window's right side
#PosizioneRelativaAllaDestraDellaFinestra=2

;related to window'w bottom side
#PosizioneRelativaAlBassoDellaFinestra=4

;size as window's inner width
#ComeLarghezzaInternaFinestra=8

;size as window's inner height
#ComeAltezzaInternaFinestra=16

;box select
#ScatolaDaSelezionare=32

;horiziontal movement
#MovimentoOrizzontale=64

;vertical movement
#MovimentoVerticale=128

;no border
#NessunBordo=256

;exclude each other
#SiEscludonoLUnLAltro=512

;attach to window's right side
#AttaccaAllaFinestraADestra=1024

;attach to window's left side
#AttaccaAllaFinestraASinistra=2048

;attach to window's top
#AttaccaAllaFinestraInAlto=4096

;attach to window's bottom
#AttaccaAllaFinestraInBasso=8192

;gimme-zero-zero border gadget
#BottoneConMemoriaBottoni=16384

;--------------------------------------------------------
;le seguenti costanti indicano gli eventi delle finestre
;the following constants state window events
;--------------------------------------------

;you have pressed a mouse button
#HaiPremutoUnTastoDelTopo=8

;you have moved the mouse
#HaiMossoIlTopo=16

;you have pressed a gadget
#HaiPremutoUnBottone=32

;you have released a gadget
#HaiRilasciatoUnBottone=64

;you have activated the menu
#HaiAttivatoIlMenu=256

;you have closed the window
#HaiChiusoLaFinestra=512

;you have pressed a key
#HaiPremutoUnTasto=1024

;--------------------------------------------------------
;le seguenti costanti indicano i tasti cliccati del topo
;the following constants state the clicked mouse buttons
;--------------------------------------------------------

;left mouse button pressed
#TastoSinistroDelTopoPremuto=1

;right mouse button pressed
#TastoDestroDelTopoPremuto=2

;both mouse buttons pressed
#EntrambiITastiDelTopoPremuti=3

;left mouse button released
#TastoSinistroDelTopoRilasciato=5

;right mouse button released
#TastoDestroDelTopoRilasciato=6

;both mouse buttons released
#EntrambiITastiDelTopoRilasciati=7

;-----------------------------------------------------------------------------
;le seguenti costanti indicano il valore ascii del tasti Backspace, Esc e dei
; tasti cursore
;the following constants state the ascii value for the Backspace, Esc and
; cursor keys
;-------------
#Backspace=8
#Escape=27
#CursorUp=28
#CursorDown=29
#CursorRight=30
#CursorLeft=31

;-----------------------------------------------------------
;le seguenti costanti indicano i bottoni del joypad premuti
;the following constants state the joypad pressed buttons
;---------------------------------------------------------
#_PlayB=1
#_ReverseB=2
#_ForwardB=4
#_GreenB=8
#_YellowB=16
#_RedB=32
#_BlueB=64

;-------------------------------------------------------------------------
;le seguenti costanti indicano la direzione scelta con il joystick/joypad
;the following constants state the choosen direction by joystick/joypad
;-----------------------------------------------------------------------
#JoyMovedUp=0
#JoyMovedRight=2
#JoyMovedDown=4
#JoyMovedLeft=6
#JoyNotMoved=8

;workbench screen
#SchermoWorkbench=0

;main window
#Finestra=0

;sound
#Suono=0

;-------------------------------------------------------------------------
;questa costante indica il numero di riferimento della fonte di caratteri
; Topaz8
;this constant states the characters font Topaz8 referring number
;-----------------------------------------------------------------
#FonteDiCaratteriTopaz8=0

;screens font
#FonteSchermi=2

;windows font
#FonteFinestre=1

;---------------------------------------------------------------------------
;le seguenti costanti sono usate dal comando WJam per la selezione del modo
; grafico
;the following constants are used by WJam command for the graphic mode
; selection
;-----------

;one colour with transparent background
#UnColoreConSfondoTrasparente=0

;two colours with full background
#DueColoriConSfondoPieno=1

;second time same colour
#SecondaVoltaStessoColore=2

;          brightest colour,darkest colour,WB colours
DEFTYPE .w ColoreChiaro,    ColoreScuro,   ColoriWorkbench

;-----------------------------------------------------------------------------
;questa struttura di variabili e' una tabella di riferimento per il periodo e
; la frequenza associati ad ognuna delle 128 note possibili
;this variables structure is a refferring table for the periode and frequency
; paired to every one of the 128 given notes
;--------------------------------------------
NEWTYPE .PeriFreq

;--------
;periode
;--------
 Periodo.l

;----------
;frequency
;----------
 Frequenza.f
End NEWTYPE
Dim PeriFreq.PeriFreq(127)

;----------------------------------------------------------------------------
;questa costante indica il valore per cui bisogna moltiplicare o dividere la
; frequenza della nota per ricavare rispettivamente la nota successiva o la
; nota precedente e corrisponde a 2^(1/12), cioe' la radice dodicesima di 2
;this constant states the value witch it must moltiply or divide the note
; frequency to obtain respectively the following note or the previous note and
; corresponds to 2^(1/12), that is the twelfth root of 2
;--------------------------------------------------------
DistanzaSemitono.f=1.05946309

NEWTYPE .Zona
 X0.w
 Y0.w
 X1.w
 Y1.w
 XFormaPixel.q
 YFormaPixel.q
End NEWTYPE
Dim Rettangolo.Zona(3)

;evaluate note frequency and period
Statement CalcolaLaFrequenzaEdIlPeriodoDelleNote{}
SHARED PeriFreq()
SHARED DistanzaSemitono
;-------------------------------------------------------------------------
;per ottenere la frequenza di tutte le 128 note, si parte dal La della 4a
; ottava (la prima e' l'ottava zero), la cui frequenza e' nota e la si
; moltiplica o divide per la distanza minima tra due note che e' il semitono;
; per ottenere il periodo si divide una delle costanti di temporizzazione, a
; seconda che il proprio AMIGA usi uno schermo PAL o NTSC, per la frequenza
; della nota; queste costanti sono riportate sul MANUALE DI RIFERIMENTO PER
; L'HARDWARE AMIGA
;to obtain all 128 notes it starts from the A from the 4rd octave (the 1st is
; the zero octave) that has a known frequency, and it multiply or divide this
; for the minimum distance between two notes that is the semitone; to obtain
; the period it divides one of the timing constants, depending on your AMIGA
; uses a PAL or NTSC screen, for the note frequency; these constants are
; reported on the AMIGA HARDWARE REFERENCE MANUAL
;-------------------------------------------------
PeriFreq(45)\Frequenza=440
If NTSC=True
 PeriFreq(45)\Periodo=#TemporizzazioneNTSC/PeriFreq(45)\Frequenza
Else
 PeriFreq(45)\Periodo=#TemporizzazionePAL/PeriFreq(45)\Frequenza
EndIf

For Nota.w=46 To 127
 PeriFreq(Nota)\Frequenza=PeriFreq(Nota-1)\Frequenza*DistanzaSemitono
 If NTSC=True
  PeriFreq(Nota)\Periodo=#TemporizzazioneNTSC/PeriFreq(Nota)\Frequenza
 Else
  PeriFreq(Nota)\Periodo=#TemporizzazionePAL/PeriFreq(Nota)\Frequenza
 EndIf
Next Nota

For Nota=44 To 0 Step -1
 PeriFreq(Nota)\Frequenza=PeriFreq(Nota+1)\Frequenza/DistanzaSemitono
 If NTSC=True
  PeriFreq(Nota)\Periodo=#TemporizzazioneNTSC/PeriFreq(Nota)\Frequenza
 Else
  PeriFreq(Nota)\Periodo=#TemporizzazionePAL/PeriFreq(Nota)\Frequenza
 EndIf
Next Nota
End Statement

;loads a sound
Function$ CaricaUnSuono{}
 MaxLen P$=160
 MaxLen F$=64
 Suono$=FileRequest$("Load an AMIGA sound...",P$,F$)
 If Suono$<>"" AND Exists(Suono$)=0 Then Suono$=""
Function Return Suono$
End Function

;finds the file name from the whole path
Function$ NomeDelSuono{Suono$}
 IndirizzoDelSuono.l=FilePart_(Suono$)
 NomeDelSuono$=Right$(Suono$,Len(Peek$(IndirizzoDelSuono)))
Function Return NomeDelSuono$
End Function

;extracts the path only from the whole path
Function$ PercorsoDelSuono{Suono$}
 IndirizzoDelSuono.l=FilePart_(Suono$)
 PercorsoDelSuono$=UnLeft$(Suono$,Len(Peek$(IndirizzoDelSuono)))
Function Return PercorsoDelSuono$
End Function

;outlined text
Statement TestoBordato{Testo$,XTesto.w,YTesto.w,ColoreTesto.w,ColoreBordo.w}
 WJam #UnColoreConSfondoTrasparente
 WColour ColoreBordo
 WLocate XTesto,YTesto+1:Print Testo$
 WLocate XTesto+1,YTesto:Print Testo$
 WLocate XTesto,YTesto-1:Print Testo$
 WLocate XTesto-1,YTesto:Print Testo$

 WColour ColoreTesto
 WLocate XTesto,YTesto:Print Testo$
 WJam #DueColoriConSfondoPieno
End Statement

;finds the brightest and the darkest colours
Statement TrovaIColori{}
SHARED ColoreChiaro
SHARED ColoreScuro
SHARED ColoriWorkbench
 Nero.w=765:Bianco.w=0
 For Colore.w=0 To ColoriWorkbench-1
  If CheckAGA=True
   Rosso.w=AGARed(Colore):Verde.w=AGAGreen(Colore):Blu.w=AGABlue(Colore)
  Else
   Rosso=Red(Colore):Verde=Green(Colore):Blu=Blue(Colore)
  EndIf
  SommaDelleComponentiDelColore.w=Rosso+Verde+Blu
  If SommaDelleComponentiDelColore<Nero Then Nero=SommaDelleComponentiDelColore:ColoreScuro=Colore
  If SommaDelleComponentiDelColore>Bianco Then Bianco=SommaDelleComponentiDelColore:ColoreChiaro=Colore
 Next Colore
End Statement

WBStartup

CalcolaLaFrequenzaEdIlPeriodoDelleNote{}

OpenFontPrefs
 AltezzaFonteFinestre=DefaultFontHeight(#FonteFinestre)
 AltezzaFonteSchermi=DefaultFontHeight(#FonteSchermi)
CloseFontPrefs
If AltezzaFonteFinestre=0 Then AltezzaFonteFinestre=8
If AltezzaFonteSchermi=0 Then AltezzaFonteSchermi=8
AltezzaTitoli.b=AltezzaFonteSchermi+3
AltezzaTestoBordato.b=AltezzaFonteFinestre+2

ColoriWorkbench=2^WBDepth

WbToScreen #SchermoWorkbench
IndirizzoSchermoWorkbench.l=Peek.l(Addr Screen(#SchermoWorkbench))

TrovaIColori{}

XLunSchermoWB.w=Peek.w(IndirizzoSchermoWorkbench+12)
YLunSchermoWB.w=Peek.w(IndirizzoSchermoWorkbench+14)

TipoFinestra.w=#BottoneChiudiFinestra+#FinestraConMemoriaBottoni+#FinestraAttivata
XLunFinestra.w=4+XLunSchermoWB/2+4
YLunFinestra.w=AltezzaTitoli+YLunSchermoWB/2+2
XPosFinestra.w=(XLunSchermoWB-XLunFinestra)/2
YPosFinestra.w=(YLunSchermoWB-YLunFinestra)/2
Window #Finestra,XPosFinestra,YPosFinestra,XLunFinestra,YLunFinestra,TipoFinestra,"BattleFields 0.03",1,2

XFormaPixel.q=1:YFormaPixel.q=1
XLunRettangolo.w=60*XFormaPixel
YLunRettangolo.w=60*YFormaPixel
X0Rettangolo.w=(InnerWidth-XLunRettangolo*7/2)/2
Y0Rettangolo.w=(InnerHeight-YLunRettangolo)/2
X1Rettangolo.w=X0Rettangolo+XLunRettangolo-1
Y1Rettangolo.w=Y0Rettangolo+YLunRettangolo-1
WBox X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,3
Wline X0Rettangolo,Y1Rettangolo-1,X0Rettangolo,Y0Rettangolo,X1Rettangolo-1,Y0Rettangolo,ColoreChiaro
Wline X1Rettangolo,Y0Rettangolo+1,X1Rettangolo,Y1Rettangolo,X0Rettangolo+1,Y1Rettangolo,ColoreScuro
Rettangolo(0)\X0=X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,XFormaPixel,YFormaPixel

XFormaPixel=0.5:YFormaPixel=1
XLunRettangolo=60*XFormaPixel
YLunRettangolo=60*YFormaPixel
X0Rettangolo=X1Rettangolo+1
X1Rettangolo=X0Rettangolo+XLunRettangolo-1
Y1Rettangolo=Y0Rettangolo+YLunRettangolo-1
WBox X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,3
Wline X0Rettangolo,Y1Rettangolo-1,X0Rettangolo,Y0Rettangolo,X1Rettangolo-1,Y0Rettangolo,ColoreChiaro
Wline X1Rettangolo,Y0Rettangolo+1,X1Rettangolo,Y1Rettangolo,X0Rettangolo+1,Y1Rettangolo,ColoreScuro
Rettangolo(1)\X0=X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,XFormaPixel,YFormaPixel

XFormaPixel=1:YFormaPixel=0.5
XLunRettangolo=60*XFormaPixel
YLunRettangolo=60*YFormaPixel
X0Rettangolo=X1Rettangolo+1
X1Rettangolo=X0Rettangolo+XLunRettangolo-1
Y1Rettangolo=Y0Rettangolo+YLunRettangolo-1
WBox X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,3
Wline X0Rettangolo,Y1Rettangolo-1,X0Rettangolo,Y0Rettangolo,X1Rettangolo-1,Y0Rettangolo,ColoreChiaro
Wline X1Rettangolo,Y0Rettangolo+1,X1Rettangolo,Y1Rettangolo,X0Rettangolo+1,Y1Rettangolo,ColoreScuro
Rettangolo(2)\X0=X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,XFormaPixel,YFormaPixel

XFormaPixel=1:YFormaPixel=0.25
XLunRettangolo=60*XFormaPixel
YLunRettangolo=60*YFormaPixel
X0Rettangolo=X1Rettangolo+1
X1Rettangolo=X0Rettangolo+XLunRettangolo-1
Y1Rettangolo=Y0Rettangolo+YLunRettangolo-1
WBox X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,3
Wline X0Rettangolo,Y1Rettangolo-1,X0Rettangolo,Y0Rettangolo,X1Rettangolo-1,Y0Rettangolo,ColoreChiaro
Wline X1Rettangolo,Y0Rettangolo+1,X1Rettangolo,Y1Rettangolo,X0Rettangolo+1,Y1Rettangolo,ColoreScuro
Rettangolo(3)\X0=X0Rettangolo,Y0Rettangolo,X1Rettangolo,Y1Rettangolo,XFormaPixel,YFormaPixel

TestoBordato{"Click the square only...",1,1,ColoreChiaro,ColoreScuro}
XFormaPixel=0:YFormaPixel=0
Repeat
 EventoFinestra.l=Event
 If EventoFinestra=#HaiChiusoLaFinestra Then Pop Repeat:Goto FineDellaBattaglia
 If EventoFinestra=#HaiPremutoUnTastoDelTopo
  XTopo.w=WMouseX:YTopo.w=WMouseY
  For Zona.b=0 To 3
   If XTopo>=Rettangolo(Zona)\X0 AND YTopo>=Rettangolo(Zona)\Y0 AND XTopo<=Rettangolo(Zona)\X1 AND YTopo<=Rettangolo(Zona)\Y1
    XFormaPixel=Rettangolo(Zona)\XFormaPixel:YFormaPixel=Rettangolo(Zona)\YFormaPixel
   EndIf
  Next
 EndIf
Until XFormaPixel>0 AND YFormaPixel>0

Repeat
 Suono$=CaricaUnSuono{}
 NomeDelSuono$=NomeDelSuono{Suono$}

 If NomeDelSuono$=""
  FineDellaBattaglia=True
 Else
  LoadSound #Suono,Suono$
  PercorsoDelSuono$=PercorsoDelSuono{Suono$}

;AMIGA voice to use
  Voce.b=1

;window centre coords for the line start position
  XCentro.w=InnerWidth/2
  YCentro.w=InnerHeight/2

;note duration
DurataNota.w=360

  Repeat
   EventoFinestra=Event
   If EventoFinestra=#HaiChiusoLaFinestra Then FineDellaBattaglia=True
   If EventoFinestra=#HaiPremutoUnTasto Then Pop Repeat:Goto CambiaIlSuono
   If DurataNota=360
    If EventoFinestra=#HaiPremutoUnTastoDelTopo
     Nota.b=127-Rnd(35)
     SetPeriod #Suono,PeriFreq(Nota)\Periodo
     Sound #Suono,Voce
     WCls:TestoBordato{"Name="+Right$(NomeDelSuono$,InnerWidth/8-Len("Name=")),1,1,3,ColoreScuro}
     TestoBordato{"Path="+Right$(PercorsoDelSuono$,InnerWidth/8-Len("Path=")),1,AltezzaTestoBordato,3,ColoreScuro}
     TestoBordato{"Frequency="+Str$(PeriFreq(Nota)\Frequenza),1,AltezzaTestoBordato*2,ColoreChiaro,ColoreScuro}
     TestoBordato{"Press a mouse key to play the sound...",1,InnerHeight-AltezzaTestoBordato*2,0,ColoreScuro}
     TestoBordato{"Press a key to load another sound...",1,InnerHeight-AltezzaTestoBordato,0,ColoreScuro}
     WEllipse XCentro,YCentro,52*XFormaPixel,52*YFormaPixel,ColoreChiaro
     Voce+Voce:If Voce=16 Then Voce=1
     DurataNota=0
    EndIf
   Else
    DurataNota+1
    XLinea.w=XCentro+Sin(DurataNota*Pi/180)*50*XFormaPixel
    YLinea.w=YCentro-Cos(DurataNota*Pi/180)*50*YFormaPixel
    Wline XCentro,YCentro,XLinea,YLinea,ColoreScuro
   EndIf
  Until FineDellaBattaglia=True
CambiaIlSuono
 EndIf
Until FineDellaBattaglia=True
FineDellaBattaglia
WCls:TestoBordato{"Press a (mouse) button to end...",1,InnerHeight-AltezzaTestoBordato,ColoreChiaro,ColoreScuro}
WaitEvent
CloseWindow #Finestra
End
